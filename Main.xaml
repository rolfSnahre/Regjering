<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="4434,2454" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Private.Xml.Linq" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>DocumentFormat.OpenXml.Drawing.Charts</x:String>
      <x:String>DocumentFormat.OpenXml</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="698,2389" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="xmlData" />
      <Variable x:TypeArguments="sxl:XDocument" Name="xmlDeserialized" />
      <Variable x:TypeArguments="scg:IEnumerable(sxl:XElement)" Name="xmlMembers" />
      <Variable x:TypeArguments="sxl:XElement" Name="xmlListElement" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="totalAgeMen" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="numberOfMen" />
      <Variable x:TypeArguments="x:Double" Name="averageAgeMen" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="totalAgeWomen" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="numberOfWomen" />
      <Variable x:TypeArguments="x:Double" Name="averageAgeWomen" />
      <Variable x:TypeArguments="x:Double" Name="percentMen" />
      <Variable x:TypeArguments="x:Double" Name="percentWomen" />
      <Variable x:TypeArguments="sxl:XNamespace" Name="xmlNamespace">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sxl:XNamespace" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">"http://data.stortinget.no"</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Name="IDs">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">new List&lt;String&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="excelTable" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="excelIDs">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">new List&lt;String&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Name="missingIDs">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">new List&lt;String&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="XML" AuthenticationType="None" BodyFormat="application/xml" DisplayName="HTTP Request" EnableSSLVerification="True" EndPoint="https://data.stortinget.no/eksport/regjering" sap:VirtualizedContainerService.HintSize="636,70" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.Result>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">xmlData</CSharpReference>
        </OutArgument>
      </ui:HttpClient.Result>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <ui:DeserializeXml DisplayName="Deserialize XML" sap:VirtualizedContainerService.HintSize="636,60" sap2010:WorkflowViewState.IdRef="DeserializeXml_1">
      <ui:DeserializeXml.XMLDocument>
        <OutArgument x:TypeArguments="sxl:XDocument">
          <CSharpReference x:TypeArguments="sxl:XDocument" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">xmlDeserialized</CSharpReference>
        </OutArgument>
      </ui:DeserializeXml.XMLDocument>
      <ui:DeserializeXml.XMLString>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">xmlData</CSharpValue>
        </InArgument>
      </ui:DeserializeXml.XMLString>
    </ui:DeserializeXml>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="XElement listElementOfMembers = xmlDeserialized.Root.Element(xmlNamespace +&quot;regjeringsmedlemmer_liste&quot;);&#xA;xmlMembers = listElementOfMembers.Elements(xmlNamespace + &quot;regjeringsmedlem&quot;);" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="636,165" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="sxl:XDocument" x:Key="xmlDeserialized">
          <CSharpValue x:TypeArguments="sxl:XDocument" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">xmlDeserialized</CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="scg:IEnumerable(sxl:XElement)" x:Key="xmlMembers">
          <CSharpReference x:TypeArguments="scg:IEnumerable(sxl:XElement)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">xmlMembers</CSharpReference>
        </OutArgument>
        <InArgument x:TypeArguments="sxl:XNamespace" x:Key="xmlNamespace">
          <CSharpValue x:TypeArguments="sxl:XNamespace" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">xmlNamespace</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Argument2" />
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="636,402" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sxl:XElement">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="member" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,276" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="String kjoenn = (String) ((XElement) member).Element(xmlNamespace + &quot;kjoenn&quot;);&#xA;String birthdayString = (String)((XElement) member).Element(xmlNamespace + &quot;foedselsdato&quot;);&#xA;String id = (String) ((XElement) member).Element(xmlNamespace + &quot;id&quot;);&#xA;IDs.Add(id);&#xA;&#xA;int age = getAge(birthdayString);&#xA;&#xA;if (kjoenn.Equals(&quot;mann&quot;)){&#xA;&#x9;numberOfMen += 1;&#xA;&#x9;totalAgeMen += age;&#xA;}else{&#xA;&#x9;numberOfWomen += 1;&#xA;&#x9;totalAgeWomen += age;&#xA;}&#xA;&#xA;int getAge(String birthdayString){&#xA;&#x9;DateTime now = DateTime.Now;&#xA;&#x9;DateTime birthday = DateTime.Parse(birthdayString);&#xA;&#x9;int age = now.Year - birthday.Year;&#xA;&#x9;bool hadBirtdayThisYear = now.DayOfYear &gt;= birthday.DayOfYear;&#xA;&#x9;if(!hadBirtdayThisYear){&#xA;&#x9;&#x9;age -= 1;&#xA;&#x9;}&#xA;&#x9;return age;&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="sxl:XElement" x:Key="member">
                  <CSharpValue x:TypeArguments="sxl:XElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">member</CSharpValue>
                </InArgument>
                <InOutArgument x:TypeArguments="x:Int32" x:Key="numberOfMen">
                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">numberOfMen</CSharpReference>
                </InOutArgument>
                <InOutArgument x:TypeArguments="x:Int32" x:Key="numberOfWomen">
                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">numberOfWomen</CSharpReference>
                </InOutArgument>
                <InArgument x:TypeArguments="sxl:XNamespace" x:Key="xmlNamespace">
                  <CSharpValue x:TypeArguments="sxl:XNamespace" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">xmlNamespace</CSharpValue>
                </InArgument>
                <InOutArgument x:TypeArguments="x:Int32" x:Key="totalAgeMen">
                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">totalAgeMen</CSharpReference>
                </InOutArgument>
                <InOutArgument x:TypeArguments="x:Int32" x:Key="totalAgeWomen">
                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">totalAgeWomen</CSharpReference>
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IDs">
                  <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">IDs</CSharpReference>
                </InOutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">xmlMembers</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
    </ui:ForEach>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="int numberOfPeople = numberOfMen + numberOfWomen;&#xD;&#xA;percentMen = (double) numberOfMen / numberOfPeople* 100;&#xD;&#xA;percentWomen = (double) numberOfWomen/numberOfPeople * 100;&#xD;&#xA;&#xD;&#xA;averageAgeMen = (double) totalAgeMen/numberOfMen;&#xD;&#xA;averageAgeWomen = (double) totalAgeWomen/numberOfWomen;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="636,165" sap2010:WorkflowViewState.IdRef="InvokeCode_6" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="numberOfMen">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">numberOfMen</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="numberOfWomen">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">numberOfWomen</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="totalAgeMen">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">totalAgeMen</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="totalAgeWomen">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">totalAgeWomen</CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="averageAgeMen">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">averageAgeMen</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="averageAgeWomen">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">averageAgeWomen</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="percentMen">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">percentMen</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="percentWomen">
          <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">percentWomen</CSharpReference>
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="636,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39" xml:space="preserve">"\n"+
"Prosent men: " + percentMen.ToString("0.##") + "%\n" +
"Prosent kvinner: " + percentWomen.ToString("0.##") + "%\n" +
"\n" +
"Gjennomsnittalder menn: " + averageAgeMen.ToString("0.#") + "\n"+
"Gjennomsnittalder kvinner: " + averageAgeWomen.ToString("0.#") +"\n"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="636,952" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,865" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="540,549" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="Oppgave_Regjeringsmedlemmer.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="RegjeringExcel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:List(x:String)" Name="missingIDs">
                        <Variable.Default>
                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">new List&lt;String&gt;()</CSharpValue>
                        </Variable.Default>
                      </Variable>
                      <Variable x:TypeArguments="x:String" Name="variable6" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_1">
                      <ueab:ReadRangeX.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">RegjeringExcel.Sheet["Ark1"].Range["A1:D18"]</CSharpValue>
                        </InArgument>
                      </ueab:ReadRangeX.Range>
                      <ueab:ReadRangeX.SaveTo>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">excelTable</CSharpReference>
                        </OutArgument>
                      </ueab:ReadRangeX.SaveTo>
                    </ueab:ReadRangeX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="DataColumn idCollum = excelTable.Columns[&quot;ID&quot;];&#xA;foreach(DataRow row in excelTable.Rows){&#xA;&#x9;string id = (string) row[&quot;ID&quot;];&#xA;&#x9;excelIDs.Add(id);&#xA;}&#xA;&#xA;foreach(String id in IDs){&#xA;&#x9;if(!excelIDs.Contains(id)){&#xA;&#x9;&#x9;missingIDs.Add(id);&#xA;&#x9;}&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="540,165" sap2010:WorkflowViewState.IdRef="InvokeCode_7" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="excelTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">excelTable</CSharpValue>
                </InArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="missingIDs">
                  <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">missingIDs</CSharpReference>
                </InOutArgument>
                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="IDs">
                  <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">IDs</CSharpValue>
                </InArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="excelIDs">
                  <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">excelIDs</CSharpReference>
                </InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Argument1" />
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="636,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37" xml:space="preserve">"\n" + 
"Manglende personer: " + string.Join(", ", missingIDs) + "\n"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>